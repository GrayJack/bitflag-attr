use bitflag_attr::bitflag;

const CONST1: u32 = 0b10;
const CONST2: u32 = 0b100;

#[bitflag(u32)]
#[derive(Debug, Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Hash)]
pub enum SmokeTest {
    Flag1 = 1 << 9,
    Flag2 = 1 << 12,
    Flag3 = CONST1,
    Flag4 = !CONST1,
    Flag5 = CONST1 | CONST2 | 3,
    Flag6 = Flag1 | Flag2,
    Flag7 = CONST1 | Flag1,
    Flag8 = (1 << 1) | (1 << 4),
    Flag9 = 12u8 as u32,
}

#[bitflag(u32)]
#[non_exhaustive]
#[derive(Debug, Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Hash)]
pub enum SmokeTest2 {
    Flag1 = 1 << 9,
    Flag2 = 1 << 12,
    Flag3 = CONST1,
    Flag4 = !CONST1,
    Flag5 = CONST1 | CONST2 | 3,
    Flag6 = Flag1 | Flag2,
    Flag7 = CONST1 | Flag1,
    Flag8 = (1 << 1) | (1 << 4),
    Flag9 = 12u8 as u32,
}

#[bitflag(u32)]
#[non_exhaustive]
#[extra_valid_bits = 0b0010111111]
#[derive(Debug, Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Hash)]
pub enum SmokeTest3 {
    Flag1 = 1 << 9,
    Flag2 = 1 << 12,
    Flag3 = CONST1,
    Flag4 = !CONST1,
    Flag5 = CONST1 | CONST2 | 3,
    Flag6 = Flag1 | Flag2,
    Flag7 = CONST1 | Flag1,
    Flag8 = (1 << 1) | (1 << 4),
    Flag9 = 12u8 as u32,
}

fn main() {}
