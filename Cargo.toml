[package]
name = "bitflag-attr"
authors = ["GrayJack <gr41.j4ck@gmail.com>"]
version = "0.7.1"
edition = "2021"
license = "MIT OR Apache-2.0"
description = "A macro to generate bitflags structures from C-like enums"
keywords = ["bit", "bitmask", "bitflags", "flags"]
categories = ["no-std"]
repository = "https://github.com/GrayJack/bitflag-attr"
homepage = "https://github.com/GrayJack/bitflag-attr"
rust-version = "1.75.0"
exclude = ["/tests", "/.github"]

[dependencies]
bitflags-attr-macros = { version = "=0.7.0", path = "bitflags-attr-macros" }

[[test]]
name = "tests"
path = "tests/progress.rs"

[[test]]
name = "generated_api_tests"
path = "tests/api.rs"

[[example]]
name = "serde"
required-features = ["serde"]

[dev-dependencies]
trybuild = "1.0"
serde = "1.0"

[features]
default = []
# Just to satisfy
std = []
# Implement `Serialize` and `Deserialize` for the type with the bitflag attribute.
# This do not add `serde` in your dependency tree
serde = ["bitflags-attr-macros/serde"]
# Allows to use custom types as parameter for the bitflags macro
custom-types = ["bitflags-attr-macros/custom-types"]
# Generate as const functions some functions that take `&mut` (Only stable on rust 1.83.0: release date: 28 November, 2024)
const-mut-ref = ["bitflags-attr-macros/const-mut-ref"]

[workspace]
members = ["bitflags-attr-macros"]
