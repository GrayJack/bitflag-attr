[package]
name = "bitflags-attr-macros"
version = "0.9.0"
edition = "2021"
license = "MIT OR Apache-2.0"
keywords = ["bit", "bitmask", "bitflags", "flags"]
categories = ["no-std"]
repository = "https://github.com/GrayJack/bitflag-attr"
homepage = "https://github.com/GrayJack/bitflag-attr"
rust-version = "1.75.0"
description = """
Attribute macro implementation for bitflags-attr.
Do not use directly, use the reexport in the `bitflags` crate. This allows for better compatibility across versions.
"""

[lib]
proc-macro = true

[dependencies]
syn = { version = "2", features = [
    "clone-impls",
    "full",
    "parsing",
    "printing",
    "proc-macro",
], default-features = false }
quote = { version = "1", default-features = false }
proc-macro2 = "1"

[features]
default = []
# Implement `Serialize` and `Deserialize` for the type with the bitflag attribute.
# This do not add `serde` in your dependency tree
serde = []
# Implement `Arbitrary` for the type with the bitflag attribute.
# This do not add `arbitrary` in your dependency tree
arbitrary = []
# Implement `Pod` and `Zeroable` for the type with the bitflag attribute.
# This do not add `bytemuck` in your dependency tree
bytemuck = []
# Allows to use custom types as parameter for the bitflags macro
custom-types = []
# Generate as const functions some functions that take `&mut` (Only stable on rust 1.83.0: release date: 28 November, 2024)
const-mut-ref = []
